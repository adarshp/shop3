(in-package :shop2-user)
(defproblem STRIPS-SAT-X-1 adlSat
  (
    ;;;
    ;;;  facts
    ;;;
    (SATELLITE SATELLITE0)
    (INSTRUMENT INSTRUMENT0)
    (INSTRUMENT INSTRUMENT1)
    (INSTRUMENT INSTRUMENT2)
    (SATELLITE SATELLITE1)
    (INSTRUMENT INSTRUMENT3)
    (MODE IMAGE1)
    (MODE INFRARED0)
    (MODE SPECTROGRAPH2)
    (DIRECTION STAR1)
    (DIRECTION STAR2)
    (DIRECTION STAR0)
    (DIRECTION STAR3)
    (DIRECTION STAR4)
    (DIRECTION PHENOMENON5)
    (DIRECTION PHENOMENON6)
    (DIRECTION PHENOMENON7)
    ;;;
    ;;;  initial states
    ;;;
    (SUPPORTS INSTRUMENT0 SPECTROGRAPH2)
    (SUPPORTS INSTRUMENT0 INFRARED0)
    (CALIBRATION_TARGET INSTRUMENT0 STAR1)
    (SUPPORTS INSTRUMENT1 IMAGE1)
    (CALIBRATION_TARGET INSTRUMENT1 STAR2)
    (SUPPORTS INSTRUMENT2 INFRARED0)
    (SUPPORTS INSTRUMENT2 IMAGE1)
    (CALIBRATION_TARGET INSTRUMENT2 STAR0)
    (ON_BOARD INSTRUMENT0 SATELLITE0)
    (ON_BOARD INSTRUMENT1 SATELLITE0)
    (ON_BOARD INSTRUMENT2 SATELLITE0)
    (POWER_AVAIL SATELLITE0)
    (POINTING SATELLITE0 STAR4)
    (SUPPORTS INSTRUMENT3 SPECTROGRAPH2)
    (SUPPORTS INSTRUMENT3 INFRARED0)
    (SUPPORTS INSTRUMENT3 IMAGE1)
    (CALIBRATION_TARGET INSTRUMENT3 STAR0)
    (ON_BOARD INSTRUMENT3 SATELLITE1)
    (POWER_AVAIL SATELLITE1)
    (POINTING SATELLITE1 STAR0)
  )
  ;;;
  ;;; goals
  ;;;
  (:ordered 
    (:TASK HAVE_IMAGE STAR3 INFRARED0)
    (:TASK HAVE_IMAGE STAR4 SPECTROGRAPH2)
    (:TASK HAVE_IMAGE PHENOMENON5 SPECTROGRAPH2)
    (:TASK HAVE_IMAGE PHENOMENON7 SPECTROGRAPH2)
  )
)
