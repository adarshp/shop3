(in-package :shop-user)

(defdomain umt-translog-operators
  (
   (:operator (!!assert ?g)
              ()
              ()
              ?g)

        (:operator (!!delete-truck ?truck)
                   ()
                   ((typevp ?truck truck))
                   ())

        (:operator (!!delete-tcenter ?location)
                   ()
                   ((tcenter ?location))
                   ())
        
        (:operator (!!delete-train ?train)
                   ()
                   ((typevp ?train train))
                   ())
        
        (:operator (!!delete-road-route ?road ?c1 ?c2)
                   ()
                   ((connect-city ?road road-route ?c1 ?c2))
                   ())

        (:operator (!!check ?p)
                   ()
                   ()
                   ((checked ?p)))

        (:operator (!!add-package-nn ?package ?tcenter1 ?tcenter2)
                   ()
                   ()
                   ((nn ?package ?tcenter1 ?tcenter2)))
        
        

        (:operator (!!add-package-nt ?package ?tcenter)
                   ()
                   ()
                   ((nt ?package ?tcenter)))

        (:operator (!!add-package-tn ?package ?tcenter)
                   ()
                   ()
                   ((tn ?package ?tcenter)))


        (:operator (!!add-package-via-hub ?package)
                   ()
                   ()
                   ((via-hub ?package)))

        (:operator (!!add-package-road ?package ?route)
                   ()
                   ()
                   ((road ?package ?route)))

        (:operator (!!add-package-non-road ?package ?route)
                   ()
                   ()
                   ((non-road ?package ?route)))
        
        
        (:operator (!!add-package-local ?package)
                   ()
                   ()
                   ((local ?package)))

        (:operator (!!add-protection ?g)
                   () 
                   ()
                   ((:protection ?g)))

        (:operator (!!delete-protection ?g)
                   ()
                   ((:protection ?g))
                   ())

        (:operator (!!add-next ?v ?d)
                   ()
                   ()
                   ((next ?v ?d)
                    (:protection (next ?v ?d))))

        (:operator (!!del-next ?v ?d)
                   ()
                   ((next ?v ?d))
                   ())
        (:operator (!!exp-weight-set ?v ?r ?weight)
                   ()
                   ()
                   ((expected ?v ?r ?weight)))

        (:operator (!!exp-weight-inc ?v ?r ?weight)
                   ((expected ?v ?r ?value) (assign ?new (call + ?value ?weight))) 
                   ((expected ?v ?r ?value))
                   ((expected ?v ?r ?new)))

        (:operator (!!exp-weight-dec ?v ?r ?weight)
                   ((expected ?v ?r ?value) (assign ?new (call - ?value ?weight)))
                   ((expected ?v ?r ?value))
                   ((expected ?v ?r ?new)))

        (:operator (!!exp-weight-clear ?v ?r)
                   ((expected ?v ?r ?value))
                   ((expected ?v ?r ?value))
                   ())

        (:operator (!collect-fees ?package)
                   ()
                   ()
                   ((fees-collected ?package)))

        (:operator (!deliver ?package ?destination)
                   ((volume-load-l ?destination ?load)
                    (volume-p ?package ?volume)
                    (assign ?newload (call - ?load ?volume)))
                   ((at-packagel ?package ?destination)
                    (volume-load-l ?destination ?load))
                   ((delivered ?package ?destination)
                    (volume-load-l ?destination ?newload)))

        (:operator (!move-vehicle-local-road-route1 ?v ?ori ?des ?ocity)
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas)
                    (gpm ?v ?gpm)
                    (distance ?ori ?des ?d)
                    (assign ?newgas (call - ?gas (call * ?d ?gpm)))
                    (call >= ?gas (call * ?gpm ?d))
                    (local-weight ?ocity ?local-weight)
                    (weight-load-v ?v ?weight-load)
                    (weight-v ?v ?weight-v)
                    (call <= (call + ?weight-v ?weight-load) ?local-weight))
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas))
                   ((at-vehicle ?v ?des)
                    (:protection (at-vehicle ?v ?des))
                    (gas-left ?v ?newgas)))

        (:operator (!move-vehicle-local-road-route2 ?v ?ori ?des ?ocity)
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas)
                    (gpm ?v ?gpm)
                    (distance ?ori ?des ?d)      
                    (assign ?newgas (call - ?gas (call * ?d ?gpm)))
                    (call >= ?gas (call * ?gpm ?d))
                    (local-weight ?ocity ?local-weight)
                    (weight-load-v ?v ?weight-load)
                    (weight-v ?v ?weight-v)
                    (call <= (call + ?weight-v ?weight-load) ?local-weight))
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas))
                   ((at-vehicle ?v ?des)
                    (:protection (at-vehicle ?v ?des))
                    (gas-left ?v ?newgas)))

        (:operator (!move-vehicle-local-road-route3 ?v ?ori ?des ?ocity)
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas)
                    (gpm ?v ?gpm)
                    (distance ?ori ?des ?d)
                    (assign ?newgas (call - ?gas (call * ?d ?gpm)))
                    (call >= ?gas (call * ?gpm ?d))
                    (local-weight ?ocity ?local-weight)
                    (weight-load-v ?v ?weight-load)
                    (weight-v ?v ?weight-v)
                    (call <= (call + ?weight-v ?weight-load) ?local-weight))
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas))
                   ((at-vehicle ?v ?des)
                    (:protection (at-vehicle ?v ?des))
                    (gas-left ?v ?newgas)))

        (:operator (!move-vehicle-road-route-crossCity ?v ?ori ?des ?ocity ?dcity ?r)
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas)
                    (gpm ?v ?gpm)
                    (distance ?ori ?des ?d)
                    (assign ?newgas (call - ?gas (call * ?d ?gpm)))
                    (call >= ?gas (call * ?gpm ?d))
                    (weight-cap-r ?r ?weight-cap)
                    (weight-load-v ?v ?weight-load)
                    (weight-v ?v ?weight-v)
                    (call <= (call + ?weight-v ?weight-load) ?weight-cap))
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas))
                   ((at-vehicle ?v ?des)
                    (:protection (at-vehicle ?v ?des))
                    (gas-left ?v ?newgas)))

        (:operator (!move-vehicle-nonroad-route1 ?v ?ori ?des ?r)
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas)
                    (gpm ?v ?gpm)
                    (distance ?ori ?des ?d)      
                    (assign ?newgas (call - ?gas (call * ?d ?gpm)))
                    (call >= ?gas (call * ?gpm ?d))
                    (weight-cap-r ?r ?weight-cap)
                    (weight-load-v ?v ?weight-load)
                    (weight-v ?v ?weight-v)
                    (call <= (call + ?weight-v ?weight-load) ?weight-cap))
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas))
                   ((at-vehicle ?v ?des)
                    (:protection (at-vehicle ?v ?des))
                    (gas-left ?v ?newgas)))

        (:operator (!move-vehicle-nonroad-route2 ?v ?ori ?des ?r)
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas)
                    (gpm ?v ?gpm)
                    (distance ?ori ?des ?d)
                    (assign ?newgas (call - ?gas (call * ?d ?gpm)))
                    (call >= ?gas (call * ?gpm ?d))
                    (weight-cap-r ?r ?weight-cap)
                    (weight-load-v ?v ?weight-load)
                    (weight-v ?v ?weight-v)
                    (call <= (call + ?weight-v ?weight-load) ?weight-cap))
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas))
                   ((at-vehicle ?v ?des)
                    (:protection (at-vehicle ?v ?des))
                    (gas-left ?v ?newgas)))

        (:operator (!move-vehicle-nonroad-route3 ?v ?ori ?des ?r)
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas)
                    (gpm ?v ?gpm)
                    (distance ?ori ?des ?d)
                    (assign ?newgas (call - ?gas (call * ?d ?gpm)))
                    (call >= ?gas (call * ?gpm ?d))
                    (weight-cap-r ?r ?weight-cap)
                    (weight-load-v ?v ?weight-load)
                    (weight-v ?v ?weight-v)
                    (call <= (call + ?weight-v ?weight-load) ?weight-cap))
                   ((at-vehicle ?v ?ori)
                    (gas-left ?v ?gas))
                   ((at-vehicle ?v ?des)
                    (:protection (at-vehicle ?v ?des))
                    (gas-left ?v ?newgas)))

        (:operator (!clean-domain)
                   ()
                   ()
                   ((clear)))

        (:operator (!open-door-regular ?vehicle)
                   ((not (door-open ?vehicle)))
                   ()
                   ((door-open ?vehicle)))

        (:operator (!close-door-regular ?vehicle)
                   ((door-open ?vehicle)
                    (at-vehicle ?vehicle ?location))
                   ((door-open ?vehicle)
                    (:protection (at-vehicle ?vehicle ?location)))
                   ())

        (:operator (!load-regular ?package ?vehicle ?location)
                   ((door-open ?vehicle)
                    (weight-cap-v ?vehicle ?wei-cap)
                    (volume-cap-v ?vehicle ?vol-cap)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-v ?vehicle ?vol-load)
                    (volume-p ?package ?vol)
                    (weight-p ?package ?wei)
                    (volume-load-l ?location ?vol-loadl)
                    (assign ?newvvl (call + ?vol ?vol-load))
                    (assign ?newvwl (call + ?wei-load ?wei))
                    (assign ?newlvl (call - ?vol-loadl ?vol))
                    (call >= ?wei-cap (call + ?wei-load ?wei))
                    (call >= ?vol-cap (call + ?vol-load ?vol)))
                   ((at-packagel ?package ?location)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?vol-loadl))  
                   ((at-packagev ?package ?vehicle)
                    (volume-load-v ?vehicle ?newvvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-l ?location ?newlvl)))  

        (:operator (!unload-regular ?package ?vehicle ?location)
                   ((volume-cap-l ?location ?vol-cap)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-v ?vehicle ?vol-load)
                    (volume-p ?package ?vol)
                    (weight-p ?package ?wei)
                    (door-open ?vehicle)
                    (volume-load-l ?location ?vol-loadl)
                    (assign ?newvvl (call - ?vol-load ?vol))
                    (assign ?newvwl (call - ?wei-load ?wei))
                    (assign ?newlvl (call + ?vol-loadl ?vol))
                    (call >= ?vol-cap (call + ?vol-loadl ?vol))) 
                   ((at-packagev ?package ?vehicle)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?vol-loadl))
                   ((at-packagel ?package ?location)
                    (volume-load-v ?vehicle ?newvvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-l ?location ?newlvl)))

        (:operator (!pick-up-package-ground ?package ?crane ?location)
                   ((volume-p ?package ?volume)
                    (volume-load-l ?location ?volume-load)
                    (assign ?newlvl (call - ?volume-load ?volume))
                    (empty ?crane))
                   ((empty ?crane)
                    (at-packagel ?package ?location)
                    (volume-load-l ?location ?volume-load))
                   ((at-packagec ?package ?crane)
                    (volume-load-l ?location ?newlvl)))

        (:operator (!put-down-package-vehicle ?package ?crane ?vehicle ?location)
                   ((weight-cap-v ?vehicle ?wei-cap)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-cap-v ?vehicle ?vol-cap)
                    (volume-load-v ?vehicle ?vol-load)
                    (volume-p ?package ?volume)
                    (assign ?newvvl (call + ?vol-load ?volume))
                    (assign ?newvwl (call + ?wei-load ?weight))
                    (call >= ?wei-cap (call + ?wei-load ?weight))
                    (call >= ?vol-cap (call + ?vol-load ?volume)))
                   ((at-packagec ?package ?crane)
                    (:protection (at-vehicle ?vehicle ?location))
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load))
                   ((empty ?crane)
                    (at-packagev ?package ?vehicle)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))

        (:operator (!pick-up-package-vehicle ?package ?crane ?vehicle ?location)
                   ((empty ?crane)
                    (volume-p ?package ?volume)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-load-v ?vehicle ?vol-load)
                    (assign ?newvvl (call - ?vol-load ?volume))
                    (assign ?newvwl (call - ?wei-load ?weight))
                    )
                   ((empty ?crane)
                    (:protection (at-vehicle ?vehicle ?location))
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (at-packagev ?package ?vehicle))
                   ((at-packagec ?package ?crane)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))

        (:operator (!put-down-package-ground ?package ?crane ?location)
                   ((volume-cap-l ?location ?volume-cap)
                    (volume-load-l ?location ?volume-load)
                    (volume-p ?package ?volume)
                    (assign ?newlvl (call + ?volume-load ?volume))
                    (call >= ?volume-cap (call + ?volume-load ?volume)))
                   ((at-packagec ?package ?crane)
                    (volume-load-l ?location ?volume-load))
                   ((empty ?crane)
                    (at-packagel ?package ?location)
                    (volume-load-l ?location ?newlvl)))

        (:operator (!connect-chute ?vehicle)
                   ((not (chute-connected ?vehicle)))
                   ()
                   ((chute-connected ?vehicle)))

        (:operator (!disconnect-chute ?vehicle)
                   ((chute-connected ?vehicle)
                    (at-vehicle ?vehicle ?location))
                   ((chute-connected ?vehicle)
                    (:protection (at-vehicle ?vehicle ?location)))
                   ())

        (:operator (!fill-hopper ?package ?vehicle ?location)
                   ((chute-connected ?vehicle)
                    (weight-cap-v ?vehicle ?wei-cap)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-cap-v ?vehicle ?vol-cap)
                    (volume-load-v ?vehicle ?vol-load)
                    (volume-p ?package ?volume)
                    (volume-load-l ?location ?volume-load)
                    (assign ?newvvl (call + ?volume ?vol-load))
                    (assign ?newvwl (call + ?wei-load ?weight))
                    (assign ?newlvl (call - ?volume-load ?volume))
                    (call >= ?wei-cap (call + ?wei-load ?weight))
                    (call >= ?vol-cap (call + ?vol-load ?volume)))
                   ((at-packagel ?package ?location)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?volume-load))
                   ((at-packagev ?package ?vehicle)
                    (volume-load-l ?location ?newlvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))

        (:operator (!empty-hopper ?package ?vehicle ?location)
                   ((volume-load-l ?location ?volume-load)
                    (volume-cap-l ?location ?volume-cap)
                    (volume-p ?package ?volume)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-load-v ?vehicle ?vol-load)
                    (chute-connected ?vehicle)
                    (assign ?newvvl (call - ?vol-load ?volume))
                    (assign ?newvwl (call - ?wei-load ?weight))
                    (assign ?newlvl (call + ?volume-load ?volume))
                    (call >= ?volume-cap (call + ?volume-load ?volume)))
                   ((at-packagev ?package ?vehicle)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?volume-load))
                   ((at-packagel ?package ?location)
                    (volume-load-l ?location ?newlvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))

        (:operator (!connect-hose ?vehicle)
                   ((not (hose-connected ?vehicle)))
                   ()
                   ((hose-connected ?vehicle)))

        (:operator (!disconnect-hose ?vehicle)
                   ((hose-connected ?vehicle)
                    (not (valve-open ?vehicle))
                    (at-vehicle ?vehicle ?location))
                   ((hose-connected ?vehicle)
                    (:protection (at-vehicle ?vehicle ?location)))
                   ())

        (:operator (!open-valve ?vehicle)
                   ((not (valve-open ?vehicle))
                    (hose-connected ?vehicle))
                   ()
                   ((valve-open ?vehicle)))

        (:operator (!close-valve ?vehicle)
                   ((valve-open ?vehicle))
                   ((valve-open ?vehicle))
                   ())

        (:operator (!fill-tank ?package ?vehicle ?location)
                   ((weight-cap-v ?vehicle ?wei-cap)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-cap-v ?vehicle ?vol-cap)
                    (volume-load-v ?vehicle ?vol-load)
                    (volume-p ?package ?volume)
                    (valve-open ?vehicle)
                    (hose-connected ?vehicle)
                    (volume-load-l ?location ?volume-load)
                    (assign ?newvvl (call + ?volume ?vol-load))
                    (assign ?newvwl (call + ?wei-load ?weight))
                    (assign ?newlvl (call - ?volume-load ?volume))
                    (call >= ?wei-cap (call + ?wei-load ?weight))
                    (call >= ?vol-cap (call + ?vol-load ?volume)))
                   ((at-packagel ?package ?location)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?volume-load))
                   ((at-packagev ?package ?vehicle)
                    (volume-load-l ?location ?newlvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))

        (:operator (!empty-tank ?package ?vehicle ?location)
                   ((volume-load-l ?location ?volume-load)
                    (volume-cap-l ?location ?volume-cap)
                    (volume-p ?package ?volume)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-load-v ?vehicle ?vol-load)
                    (valve-open ?vehicle)
                    (hose-connected ?vehicle)
                    (assign ?newvvl (call - ?vol-load ?volume))
                    (assign ?newvwl (call - ?wei-load ?weight))
                    (assign ?newlvl (call + ?volume-load ?volume))
                    (call >= ?volume-cap (call + ?volume-load ?volume)))
                   ((at-packagev ?package ?vehicle)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?volume-load))
                   ((at-packagel ?package ?location)
                    (volume-load-l ?location ?newlvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))
        
        (:operator (!raise-ramp ?vehicle)
                   ((ramp-down ?vehicle)
                    (at-vehicle ?vehicle ?location))
                   ((ramp-down ?vehicle)
                    (:protection (at-vehicle ?vehicle ?location)))
                   ())

        (:operator (!lower-ramp ?vehicle)
                   ((not (ramp-down ?vehicle)))
                   ()  
                   ((ramp-down ?vehicle)))

        (:operator (!load-cars ?package ?vehicle ?location)
                   ((ramp-down ?vehicle)
                    (weight-cap-v ?vehicle ?wei-cap)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-cap-v ?vehicle ?vol-cap)
                    (volume-load-v ?vehicle ?vol-load)
                    (volume-p ?package ?volume)
                    (volume-load-l ?location ?volume-load)
                    (assign ?newvvl (call + ?volume ?vol-load))
                    (assign ?newvwl (call + ?wei-load ?weight))
                    (assign ?newlvl (call - ?volume-load ?volume))
                    (call >= ?wei-cap (call + ?wei-load ?weight))
                    (call >= ?vol-cap (call + ?vol-load ?volume)))
                   ((at-packagel ?package ?location)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?volume-load))
                   ((at-packagev ?package ?vehicle)
                    (volume-load-l ?location ?newlvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))

        (:operator (!unload-cars ?package ?vehicle ?location)
                   ((volume-load-l ?location ?volume-load)
                    (volume-cap-l ?location ?volume-cap)
                    (volume-p ?package ?volume)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-load-v ?vehicle ?vol-load)
                    (assign ?newvvl (call - ?vol-load ?volume))
                    (assign ?newvwl (call - ?wei-load ?weight))
                    (assign ?newlvl (call + ?volume-load ?volume))
                    (ramp-down ?vehicle)
                    (call >= ?volume-cap (call + ?volume-load ?volume)))
                   ((at-packagev ?package ?vehicle)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?volume-load))
                   ((at-packagel ?package ?location)
                    (volume-load-l ?location ?newlvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))

        (:operator (!attach-conveyor-ramp ?vehicle ?ramp ?location)
                   ((not (ramp-connected ?v ?ramp))
                    (not (ramp-connected ?vehicle ?r)))
                   ()
                   ((ramp-connected ?vehicle ?ramp)))

        (:operator (!detach-conveyor-ramp ?vehicle ?ramp ?location)
                   ((ramp-connected ?vehicle ?ramp)
                    (not (door-open ?vehicle))
                    (at-vehicle ?vehicle ?location))
                   ((ramp-connected ?vehicle ?ramp)
                    (:protection (at-vehicle ?vehicle ?location)))
                   ())

        (:operator (!open-door-airplane ?vehicle)
                   ((ramp-connected ?vehicle ?ramp)
                    (not (door-open ?vehicle)))
                   ()
                   ((door-open ?vehicle)))

        (:operator (!close-door-airplane ?vehicle)
                   ((door-open ?vehicle))
                   ((door-open ?vehicle))
                   ())

        (:operator (!load-airplane ?package ?vehicle ?location)
                   ((ramp-connected ?vehicle ?ramp)
                    (door-open ?vehicle)
                    (weight-cap-v ?vehicle ?wei-cap)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-cap-v ?vehicle ?vol-cap)
                    (volume-load-v ?vehicle ?vol-load)
                    (volume-p ?package ?volume)
                    (volume-load-l ?location ?volume-load)
                    (assign ?newvvl (call + ?volume ?vol-load))
                    (assign ?newvwl (call + ?wei-load ?weight))
                    (assign ?newlvl (call - ?volume-load ?volume))
                    (call >= ?wei-cap (call + ?wei-load ?weight))
                    (call >= ?vol-cap (call + ?vol-load ?volume)))
                   ((at-packagel ?package ?location)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?volume-load))
                   ((at-packagev ?package ?vehicle)
                    (volume-load-l ?location ?newlvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))

        (:operator (!unload-airplane ?package ?vehicle ?location)
                   ((volume-load-l ?location ?volume-load)
                    (volume-cap-l ?location ?volume-cap)
                    (volume-p ?package ?volume)
                    (weight-load-v ?vehicle ?wei-load)
                    (weight-p ?package ?weight)
                    (volume-load-v ?vehicle ?vol-load)
                    (assign ?newvvl (call - ?vol-load ?volume))
                    (assign ?newvwl (call - ?wei-load ?weight))
                    (assign ?newlvl (call + ?volume-load ?volume))
                    (ramp-connected ?vehicle ?ramp)
                    (door-open ?vehicle)
                    (call >= ?volume-cap (call + ?volume-load ?volume)))
                   ((at-packagev ?package ?vehicle)
                    (volume-load-v ?vehicle ?vol-load)
                    (weight-load-v ?vehicle ?wei-load)
                    (volume-load-l ?location ?volume-load))
                   ((at-packagel ?package ?location)
                    (volume-load-l ?location ?newlvl)
                    (weight-load-v ?vehicle ?newvwl)
                    (volume-load-v ?vehicle ?newvvl)))

        (:operator (!!delete-airplane ?airplane)
                   ()
                   ((typevp ?airplane airplane))
                   ())
        
        (:operator (!!delete-non-road-route ?road ?type ?l1 ?l2)
                   ()
                   ((connect-loc ?road ?type ?l1 ?l2))
                   ())
        
   ))
